(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _main = require('./main.js');

var _main2 = _interopRequireDefault(_main);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

},{"./main.js":2}],2:[function(require,module,exports){
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var serviceName = 'Enginner Fighter',
    thisServer = 'http://localhost:3000/',
    socket = io.connect(thisServer);

var screen_width = 640;
var screen_height = 290;
var player02_width = 80;
var player02_height = 80;
var player01_image = thisServer + 'images/player01.gif';
var player02_image = thisServer + 'images/player02.gif';
var bg_battle_image01 = thisServer + 'images/bg_battle01.jpg';

var assets = [player01_image, player02_image, bg_battle_image01];

var player01 = void 0;

var playerInfo = {
	id: '',
	loginName: 'hoge',
	x: 128,
	y: 220,
	nameX: 0,
	nameY: 0,
	frame: 0
};

var player = null;
var otherPlayers = {};

// 繋がった時の処理
socket.on('connect', function () {
	Push.create('Enginner Fighter', {
		body: playerInfo.loginName + 'がログインしました。',
		icon: {
			x32: '' + playerInfo.img
		},
		timeout: 3000
	});
	playerInfo.id = socket.id;
	socket.emit('name', playerInfo);
});

enchant();

window.onload = function () {
	var game = new Game(screen_width, screen_height);
	game.preload(assets);
	game.fps = 30;
	game.keybind(32, 'space');
	game.keybind(65, 'a');
	game.keybind(83, 's');
	game.onload = function () {
		var root = game.rootScene,
		    input = game.input,
		    player_speed = 15;

		var LifeP1 = new Entity();
		LifeP1.width = screen_width / 2 - 10;
		LifeP1.height = 20;
		LifeP1.x = 10;
		LifeP1.y = 10;
		LifeP1.backgroundColor = '#27e4b2';

		var LifeP2 = new Entity();
		LifeP2.width = -screen_width / 2 + 10;
		LifeP2.height = 20;
		LifeP2.x = screen_width - 10;
		LifeP2.y = 10;
		LifeP2.backgroundColor = '#27e4b2';

		var scene = new Scene();
		var bg = new Sprite(screen_width, screen_height);
		bg.image = game.assets[bg_battle_image01];
		bg.x = 0;
		bg.y = 0;

		socket.on('name', function (otherPlayerInfo) {
			var id = otherPlayerInfo.id;
			var otherPlayer = otherPlayers[id] = new Sprite(64, 64);

			otherPlayer.id = id;
			otherPlayer.x = 0;
			otherPlayer.y = 0;
			otherPlayer.frame = 1;

			otherPlayer.setPosition = function (pos) {
				otherPlayer.x = pos.x;
				otherPlayer.y = pos.y;
				otherPlayer.frame = pos.frame;
			};
			otherPlayer.setPosition.bind(otherPlayerInfo);

			// player01のジャンプ
			socket.on('pushUp01:' + id, function (pos) {
				player01.x = pos.x;
				player01.y = pos.y;
				player01.frame = pos.frame;
				console.log('y: ' + player01.y + ', frame: ' + player01.frame);
			});

			// player01の右移動
			socket.on('pushRight01:' + id, function (pos) {
				player01.x = pos.x;
				player01.y = pos.y;
				player01.frame = pos.frame;
				console.log('x: ' + player01.x + ', frame: ' + player01.frame);
			});

			// player01のかがみ
			socket.on('pushDown01:' + id, function (pos) {
				player01.x = pos.x;
				player01.y = pos.y;
				player01.frame = pos.frame;
			});

			// player01の左移動
			socket.on('pushLeft01:' + id, function (pos) {
				player01.x = pos.x;
				player01.y = pos.y;
				player01.frame = pos.frame;
				console.log('x: ' + player01.x + ', frame: ' + player01.frame);
			});

			socket.on('attackA01:' + id, function (pos) {
				player01.x = pos.x;
				player01.y = pos.y;
				player01.frame = pos.frame;
				console.log(player01);
				console.log(player01.frame);
			});
		});

		var Player01 = Class.create(Sprite, {
			initialize: function initialize(playerInfo) {
				var _this = this;

				var ground = 220,
				    preInput = false,
				    jump = false;

				Sprite.call(this, 64, 64);
				this.playerInfo = playerInfo;
				this.setSettingFile(playerInfo.settingFile);
				this.image = game.assets[player01_image];
				this.frame = this.playerInfo.frame;
				this.scaleX = -1;
				this.x = this.playerInfo.x;
				this.y = this.playerInfo.y;
				this.width = 64;
				// 名前
				this.loginName = new Label(this.playerInfo.loginName);
				this.loginName.width = 100;
				this.loginName.color = 'black';
				this.loginName.x = this.x + 10;
				this.loginName.y = this.y - 15;
				// 衝突判定
				this.entity = new Entity();
				this.entity.x = this.x;
				this.entity.y = this.y;
				this.entity.width = 64;
				this.entity.height = 64;
				this.entity.backgroundColor = 'blue';
				this.on('enterframe', function () {
					if (playerInfo.id) {
						var tempy = _this.y,
						    gravity = 1.0;

						_this.frame = _this.playerInfo.frame;
						_this.scaleX = -1;
						if (input.up && !preInput && !jump) {
							gravity = -12.0;
							jump = true;
							_this.loginName.y = _this.y - 15;
							socket.emit('pushUp01', {
								x: _this.x,
								y: _this.y,
								frame: _this.frame
							});
						}
						if (input.right) {
							_this.x += player_speed;
							_this.loginName.x += player_speed;
							_this.frame = _this.age % 3 + 1;
							socket.emit('pushRight01', {
								x: _this.x,
								y: _this.y,
								frame: _this.frame
							});
						}
						if (input.down) {
							_this.frame = 8;
							socket.emit('pushDown01', {
								x: _this.x,
								y: _this.y,
								frame: _this.frame
							});
						}
						if (input.left) {
							_this.scaleX = 1;
							_this.x -= player_speed;
							_this.loginName.x -= player_speed;
							_this.frame = _this.age % 3 + 1;
							socket.emit('pushLeft01', {
								x: _this.x,
								y: _this.y,
								frame: _this.frame
							});
						}
						if (input.a) {
							_this.x += 50;
							_this.frame = _this.age % 3 + 9;
							socket.emit('attackA01', {
								x: _this.x,
								y: _this.y,
								frame: _this.frame
							});
						}
						if (input.s) {
							_this.x += 10;
							_this.frame = _this.age % 2 + 4;
						}
						_this.y += _this.y - ground + gravity;
						if (_this.y > 220) {
							_this.y = 220;
							jump = false;
						}
						ground = tempy;
						preInput = input.up;
					}

					var left = 0;
					var top = 0;
					var right = screen_width - _this.width;
					var bottom = screen_height - _this.heigh;


					if (_this.x < left || _this.loginName.x < left) {
						_this.x = left;
						_this.loginName.x = left;
					} else if (_this.x > right || _this.loginName.x > right) {
						_this.x = right;
						_this.loginName.x = right;
					}
					if (_this.y < top || _this.loginName.y < top) {
						_this.y = top;
						_this.loginName.y = top;
					} else if (_this.y > bottom || _this.loginName.y > bottom) {
						_this.y = bottom;
						_this.loginName.y = bottom;
					}
				});

				return this;
			},
			setSettingFile: function setSettingFile(settingFile) {
				this.settingFile = settingFile;
				var core = enchant.Core.instance;
				if (core.assets[this.settingFile]) {
					this.setSetting(core.assets[this.settingFile]);
				}
			},
			setSetting: function setSetting(setting) {
				var info = JSON.parse(setting);

				this.width = info.width;
				this.height = info.height;
				this.x = info.x;
				this.y = info.y;
				console.log(this.x);
				this.setImage(info.image);
			},
			attack: function attack() {
				this.frame = this.age % 3 + 4;
				console.log(player01);
			}
		});

		var Attack01 = Class.create(Sprite, {
			initialize: function initialize(x, y) {
				sprite.call(this, 64, 64);
				this.destroy = false;
				this.x = x;
				this.y = y;
				this.on('enterframe', function () {
					if (game.input.a) {
						Attack01Fuc();
					}
					console.log(Attack01);
				});
			}
		});

		var Player03 = function Player03(x, y) {
			_classCallCheck(this, Player03);

			var player03_img = new Image();
			player03_img.src = 'http://localhost:3000/images/bigmonster2.gif';
			this.x = x;
			this.y = y;
			this.width = 254;
			this.height = 254;
			this.image = game.assets[player01_image];
			this.frame = 0;
		};

		var Player02 = Class.create(Sprite, {
			initialize: function initialize(x, y) {
				var _this2 = this;

				Sprite.call(this, 64, 64);
				this.image = game.assets[player02_image];
				var p01_image = this.image;
				this.x = x;
				this.y = y;
				this.scaleX = 1;
				this.frame = 0;
				this.on('enterframe', function () {
					_this2.frame = _this2.direction * 3 + _this2.walk;
				});
			}
		});

		var attackIntersect = function attackIntersect() {
			if (player01.intersect(player02)) {
				player02.removeEnterListener('enterframe', attackIntersect);
				console.log('ぶつかった');
			}
		};

		function Attack01Fuc() {
			var attack01 = new Attack01();
			root.addChild(attack01);
			console.log(attack01);
		}

		function topScene() {
			var scene = new Scene();
			var bg = new Sprite(screen_width, screen_height);

			return scene;
		}

		function battleScene() {
			root.addChild(bg);
			root.addChild(LifeP1);
			root.addChild(LifeP2);
			player01 = new Player01(playerInfo);
			root.addChild(player01, attackIntersect);
			root.addChild(player01.loginName);

			console.log(player01.frame);

			var player02 = new Player02(screen_width / 1.5, 220);
			root.addChild(player02, attackIntersect);

			// const distance = (player01Entity.width + player01.width) / 2;
			// if (player01.within(player01Entity, distance) === true) {
			// 	player01Entity.backgroundColor = 'red';
			// }
			return scene;
		}

		game.rootScene.on('enterframe', function () {
			if (game.input.space) {
				battleScene();
			}
		});
	};
	game.start();
};

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwdWJsaWMvamF2YXNjcmlwdHMvYXBwLmpzIiwicHVibGljL2phdmFzY3JpcHRzL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBOzs7Ozs7Ozs7OztBQ0FBLElBQU0sY0FBYyxrQkFBcEI7SUFDTSxhQUFhLHdCQURuQjtJQUVNLFNBQVMsR0FBRyxPQUFILENBQVcsVUFBWCxDQUZmOztBQUlBLElBQU0sZUFBZSxHQUFyQjtBQUNBLElBQU0sZ0JBQWdCLEdBQXRCO0FBQ0EsSUFBTSxpQkFBaUIsRUFBdkI7QUFDQSxJQUFNLGtCQUFrQixFQUF4QjtBQUNBLElBQU0saUJBQWlCLGFBQWEscUJBQXBDO0FBQ0EsSUFBTSxpQkFBaUIsYUFBYSxxQkFBcEM7QUFDQSxJQUFNLG9CQUFvQixhQUFhLHdCQUF2Qzs7QUFHQSxJQUFNLFNBQVMsQ0FDZCxjQURjLEVBRWQsY0FGYyxFQUdkLGlCQUhjLENBQWY7O0FBTUEsSUFBSSxpQkFBSjs7QUFFQSxJQUFNLGFBQWE7QUFDbEIsS0FBSSxFQURjO0FBRWxCLFlBQVcsTUFGTztBQUdsQixJQUFHLEdBSGU7QUFJbEIsSUFBRyxHQUplO0FBS2xCLFFBQU8sQ0FMVztBQU1sQixRQUFPLENBTlc7QUFPbEIsUUFBTztBQVBXLENBQW5COztBQVVBLElBQU0sU0FBUyxJQUFmO0FBQ0EsSUFBTSxlQUFlLEVBQXJCOzs7QUFHQSxPQUFPLEVBQVAsQ0FBVSxTQUFWLEVBQXFCLFlBQU07QUFDMUIsTUFBSyxNQUFMLENBQVksa0JBQVosRUFBZ0M7QUFDL0IsUUFBUyxXQUFXLFNBQXBCLGVBRCtCO0FBRS9CLFFBQU07QUFDTCxhQUFRLFdBQVc7QUFEZCxHQUZ5QjtBQUsvQixXQUFTO0FBTHNCLEVBQWhDO0FBT0EsWUFBVyxFQUFYLEdBQWdCLE9BQU8sRUFBdkI7QUFDQSxRQUFPLElBQVAsQ0FBWSxN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LEtBQUssS0FBTCxDQUFXLEtBQWYsRUFBc0I7QUFDckI7QUFDQTtBQUNELEdBSkQ7QUFLQSxFQXRURDtBQXVUQSxNQUFLLEtBQUw7QUFDQSxDQS9URCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJpbXBvcnQgbWFpbiBmcm9tICcuL21haW4uanMnOyIsImNvbnN0IHNlcnZpY2VOYW1lID0gJ0VuZ2lubmVyIEZpZ2h0ZXInLFxuICAgICAgdGhpc1NlcnZlciA9ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvJyxcbiAgICAgIHNvY2tldCA9IGlvLmNvbm5lY3QodGhpc1NlcnZlcik7XG5cbmNvbnN0IHNjcmVlbl93aWR0aCA9IDY0MDtcbmNvbnN0IHNjcmVlbl9oZWlnaHQgPSAyOTA7XG5jb25zdCBwbGF5ZXIwMl93aWR0aCA9IDgwO1xuY29uc3QgcGxheWVyMDJfaGVpZ2h0ID0gODA7XG5jb25zdCBwbGF5ZXIwMV9pbWFnZSA9IHRoaXNTZXJ2ZXIgKyAnaW1hZ2VzL3BsYXllcjAxLmdpZic7XG5jb25zdCBwbGF5ZXIwMl9pbWFnZSA9IHRoaXNTZXJ2ZXIgKyAnaW1hZ2VzL3BsYXllcjAyLmdpZic7XG5jb25zdCBiZ19iYXR0bGVfaW1hZ2UwMSA9IHRoaXNTZXJ2ZXIgKyAnaW1hZ2VzL2JnX2JhdHRsZTAxLmpwZyc7XG5cblxuY29uc3QgYXNzZXRzID0gW1xuXHRwbGF5ZXIwMV9pbWFnZSxcblx0cGxheWVyMDJfaW1hZ2UsXG5cdGJnX2JhdHRsZV9pbWFnZTAxXG5dO1xuXG5sZXQgcGxheWVyMDE7XG5cbmNvbnN0IHBsYXllckluZm8gPSB7XG5cdGlkOiAnJyxcblx0bG9naW5OYW1lOiAnaG9nZScsXG5cdHg6IDEyOCxcblx0eTogMjIwLFxuXHRuYW1lWDogMCxcblx0bmFtZVk6IDAsXG5cdGZyYW1lOiAwXG59O1xuXG5jb25zdCBwbGF5ZXIgPSBudWxsO1xuY29uc3Qgb3RoZXJQbGF5ZXJzID0ge307XG5cbi8vIOe5i+OBjOOBo+OBn+aZguOBruWHpueQhlxuc29ja2V0Lm9uKCdjb25uZWN0JywgKCkgPT4ge1xuXHRQdXNoLmNyZWF0ZSgnRW5naW5uZXIgRmlnaHRlcicsIHtcblx0XHRib2R5OiBgJHtwbGF5ZXJJbmZvLmxvZ2luTmFtZX3jgYzjg63jgrDjgqTjg7PjgZfjgb7jgZfjgZ/jgIJgLFxuXHRcdGljb246IHtcblx0XHRcdHgzMjogYCR7cGxheWVySW5mby5pbWd9YFxuXHRcdH0sXG5cdFx0dGltZW91dDogMzAwMFxuXHR9KTtcblx0cGxheWVySW5mby5pZCA9IHNvY2tldC5pZDtcblx0c29ja2V0LmVtaXQoJ25hbWUnLCBwbGF5ZXJJbmZvKTtcbn0pO1xuXG5lbmNoYW50KCk7XG5cbndpbmRvdy5vbmxvYWQgPSAoKSA9PiB7XG5cdGNvbnN0IGdhbWUgPSBuZXcgR2FtZShzY3JlZW5fd2lkdGgsIHNjcmVlbl9oZWlnaHQpO1xuXHRnYW1lLnByZWxvYWQoYXNzZXRzKTtcblx0Z2FtZS5mcHMgPSAzMDtcblx0Z2FtZS5rZXliaW5kKDMyLCAnc3BhY2UnKTtcblx0Z2FtZS5rZXliaW5kKDY1LCAnYScpO1xuXHRnYW1lLmtleWJpbmQoODMsICdzJyk7XG5cdGdhbWUub25sb2FkID0gKCkgPT4ge1xuXHRcdGNvbnN0IHJvb3QgPSBnYW1lLnJvb3RTY2VuZSxcblx0XHRcdFx0XHRpbnB1dCA9IGdhbWUuaW5wdXQsXG5cdFx0XHRcdFx0cGxheWVyX3NwZWVkID0gMTU7XG5cblx0XHRjb25zdCBMaWZlUDEgPSBuZXcgRW50aXR5KCk7XG5cdFx0TGlmZVAxLndpZHRoID0gc2NyZWVuX3dpZHRoIC8gMiAtIDEwO1xuXHRcdExpZmVQMS5oZWlnaHQgPSAyMDtcblx0XHRMaWZlUDEueCA9IDEwO1xuXHRcdExpZmVQMS55ID0gMTA7XG5cdFx0TGlmZVAxLmJhY2tncm91bmRDb2xvciA9ICcjMjdlNGIyJztcblxuXHRcdGNvbnN0IExpZmVQMiA9IG5ldyBFbnRpdHkoKTtcblx0XHRMaWZlUDIud2lkdGggPSAtc2NyZWVuX3dpZHRoIC8gMiArIDEwO1xuXHRcdExpZmVQMi5oZWlnaHQgPSAyMDtcblx0XHRMaWZlUDIueCA9IHNjcmVlbl93aWR0aCAtIDEwO1xuXHRcdExpZmVQMi55ID0gMTA7XG5cdFx0TGlmZVAyLmJhY2tncm91bmRDb2xvciA9ICcjMjdlNGIyJztcblxuXHRcdGxldCBzY2VuZSA9IG5ldyBTY2VuZSgpO1xuXHRcdGxldCBiZyA9IG5ldyBTcHJpdGUoc2NyZWVuX3dpZHRoLCBzY3JlZW5faGVpZ2h0KTtcblx0XHRiZy5pbWFnZSA9IGdhbWUuYXNzZXRzW2JnX2JhdHRsZV9pbWFnZTAxXTtcblx0XHRiZy54ID0gMDtcblx0XHRiZy55ID0gMDtcblxuXHRcdHNvY2tldC5vbignbmFtZScsIG90aGVyUGxheWVySW5mbyA9PiB7XG5cdFx0XHRsZXQgaWQgPSBvdGhlclBsYXllckluZm8uaWQ7XG5cdFx0XHRjb25zdCBvdGhlclBsYXllciA9IG90aGVyUGxheWVyc1tpZF0gPSBuZXcgU3ByaXRlKDY0LCA2NCk7XG5cblx0XHRcdG90aGVyUGxheWVyLmlkID0gaWQ7XG5cdFx0XHRvdGhlclBsYXllci54ID0gMDtcblx0XHRcdG90aGVyUGxheWVyLnkgPSAwO1xuXHRcdFx0b3RoZXJQbGF5ZXIuZnJhbWUgPSAxO1xuXG5cdFx0XHRvdGhlclBsYXllci5zZXRQb3NpdGlvbiA9IHBvcyA9PiB7XG5cdFx0XHRcdG90aGVyUGxheWVyLnggPSBwb3MueDtcblx0XHRcdFx0b3RoZXJQbGF5ZXIueSA9IHBvcy55O1xuXHRcdFx0XHRvdGhlclBsYXllci5mcmFtZSA9IHBvcy5mcmFtZTtcblx0XHRcdH1cblx0XHRcdG90aGVyUGxheWVyLnNldFBvc2l0aW9uLmJpbmQob3RoZXJQbGF5ZXJJbmZvKTtcblxuXHRcdFx0Ly8gcGxheWVyMDHjga7jgrjjg6Pjg7Pjg5dcblx0XHRcdHNvY2tldC5vbigncHVzaFVwMDE6JyArIGlkLCBwb3MgPT4ge1xuXHRcdFx0XHRwbGF5ZXIwMS54ID0gcG9zLng7XG5cdFx0XHRcdHBsYXllcjAxLnkgPSBwb3MueTtcblx0XHRcdFx0cGxheWVyMDEuZnJhbWUgPSBwb3MuZnJhbWU7XG5cdFx0XHRcdGNvbnNvbGUubG9nKGB5OiAke3BsYXllcjAxLnl9LCBmcmFtZTogJHtwbGF5ZXIwMS5mcmFtZX1gKTtcblx0XHRcdH0pO1xuXG5cdFx0XHQvLyBwbGF5ZXIwMeOBruWPs+enu+WLlVxuXHRcdFx0c29ja2V0Lm9uKCdwdXNoUmlnaHQwMTonICsgaWQsIHBvcyA9PiB7XG5cdFx0XHRcdHBsYXllcjAxLnggPSBwb3MueDtcblx0XHRcdFx0cGxheWVyMDEueSA9IHBvcy55O1xuXHRcdFx0XHRwbGF5ZXIwMS5mcmFtZSA9IHBvcy5mcmFtZTtcblx0XHRcdFx0Y29uc29sZS5sb2coYHg6ICR7cGxheWVyMDEueH0sIGZyYW1lOiAke3BsYXllcjAxLmZyYW1lfWApO1xuXHRcdFx0fSk7XG5cblx0XHRcdC8vIHBsYXllcjAx44Gu44GL44GM44G/XG5cdFx0XHRzb2NrZXQub24oJ3B1c2hEb3duMDE6JyArIGlkLCBwb3MgPT4ge1xuXHRcdFx0XHRwbGF5ZXIwMS54ID0gcG9zLng7XG5cdFx0XHRcdHBsYXllcjAxLnkgPSBwb3MueTtcblx0XHRcdFx0cGxheWVyMDEuZnJhbWUgPSBwb3MuZnJhbWU7XG5cdFx0XHR9KTtcbuOAgFxuXHRcdFx0Ly8gcGxheWVyMDHjga7lt6bnp7vli5Vcblx0XHRcdHNvY2tldC5vbigncHVzaExlZnQwMTonICsgaWQsIHBvcyA9PiB7XG5cdFx0XHRcdHBsYXllcjAxLnggPSBwb3MueDtcblx0XHRcdFx0cGxheWVyMDEueSA9IHBvcy55O1xuXHRcdFx0XHRwbGF5ZXIwMS5mcmFtZSA9IHBvcy5mcmFtZTtcblx0XHRcdFx0Y29uc29sZS5sb2coYHg6ICR7cGxheWVyMDEueH0sIGZyYW1lOiAke3BsYXllcjAxLmZyYW1lfWApO1xuXHRcdFx0fSk7XG5cblx0XHRcdHNvY2tldC5vbignYXR0YWNrQTAxOicgKyBpZCwgcG9zID0+IHtcblx0XHRcdFx0cGxheWVyMDEueCA9IHBvcy54O1xuXHRcdFx0XHRwbGF5ZXIwMS55ID0gcG9zLnk7XG5cdFx0XHRcdHBsYXllcjAxLmZyYW1lID0gcG9zLmZyYW1lO1xuXHRcdFx0XHRjb25zb2xlLmxvZyhwbGF5ZXIwMSk7XG5cdFx0XHRcdGNvbnNvbGUubG9nKHBsYXllcjAxLmZyYW1lKTtcblx0XHRcdH0pO1xuXHRcdH0pO1xuXG5cdFx0Y29uc3QgUGxheWVyMDEgPSBDbGFzcy5jcmVhdGUoU3ByaXRlLCB7XG5cdFx0XHRpbml0aWFsaXplOiBmdW5jdGlvbihwbGF5ZXJJbmZvKSB7XG5cdFx0XHRcdGxldCBncm91bmQgPSAyMjAsXG5cdFx0XHRcdFx0XHRwcmVJbnB1dCA9IGZhbHNlLFxuXHRcdFx0XHRcdFx0anVtcCA9IGZhbHNlO1xuXG5cdFx0XHRcdFNwcml0ZS5jYWxsKHRoaXMsIDY0LCA2NCk7XG5cdFx0XHRcdHRoaXMucGxheWVySW5mbyA9IHBsYXllckluZm87XG5cdFx0XHRcdHRoaXMuc2V0U2V0dGluZ0ZpbGUocGxheWVySW5mby5zZXR0aW5nRmlsZSk7XG5cdFx0XHRcdHRoaXMuaW1hZ2UgPSBnYW1lLmFzc2V0c1twbGF5ZXIwMV9pbWFnZV07XG5cdFx0XHRcdHRoaXMuZnJhbWUgPSB0aGlzLnBsYXllckluZm8uZnJhbWU7XG5cdFx0XHRcdHRoaXMuc2NhbGVYID0gLTE7XG5cdFx0XHRcdHRoaXMueCA9IHRoaXMucGxheWVySW5mby54O1xuXHRcdFx0XHR0aGlzLnkgPSB0aGlzLnBsYXllckluZm8ueTtcblx0XHRcdFx0dGhpcy53aWR0aCA9IDY0O1xuXHRcdFx0XHQvLyDlkI3liY1cblx0XHRcdFx0dGhpcy5sb2dpbk5hbWUgPSBuZXcgTGFiZWwodGhpcy5wbGF5ZXJJbmZvLmxvZ2luTmFtZSk7XG5cdFx0XHRcdHRoaXMubG9naW5OYW1lLndpZHRoID0gMTAwO1xuXHRcdFx0XHR0aGlzLmxvZ2luTmFtZS5jb2xvciA9ICdibGFjayc7XG5cdFx0XHRcdHRoaXMubG9naW5OYW1lLnggPSB0aGlzLnggKyAxMDtcblx0XHRcdFx0dGhpcy5sb2dpbk5hbWUueSA9IHRoaXMueSAtIDE1O1xuXHRcdFx0XHQvLyDooZ3nqoHliKTlrppcblx0XHRcdFx0dGhpcy5lbnRpdHkgPSBuZXcgRW50aXR5KCk7XG5cdFx0XHRcdHRoaXMuZW50aXR5LnggPSB0aGlzLng7XG5cdFx0XHRcdHRoaXMuZW50aXR5LnkgPSB0aGlzLnk7XG5cdFx0XHRcdHRoaXMuZW50aXR5LndpZHRoID0gNjQ7XG5cdFx0XHRcdHRoaXMuZW50aXR5LmhlaWdodCA9IDY0O1xuXHRcdFx0XHR0aGlzLmVudGl0eS5iYWNrZ3JvdW5kQ29sb3IgPSAnYmx1ZSc7XG5cdFx0XHRcdHRoaXMub24oJ2VudGVyZnJhbWUnLCAoKSA9PiB7XG5cdFx0XHRcdFx0aWYgKHBsYXllckluZm8uaWQpIHtcblx0XHRcdFx0XHRcdGxldCB0ZW1weSA9IHRoaXMueSxcblx0XHRcdFx0XHRcdFx0XHRncmF2aXR5ID0gMS4wO1xuXG5cdFx0XHRcdFx0XHR0aGlzLmZyYW1lID0gdGhpcy5wbGF5ZXJJbmZvLmZyYW1lO1xuXHRcdFx0XHRcdFx0dGhpcy5zY2FsZVggPSAtMTtcblx0XHRcdFx0XHRcdGlmIChpbnB1dC51cCAmJiAhcHJlSW5wdXQgJiYgIWp1bXApIHtcblx0XHRcdFx0XHRcdCAgZ3Jhdml0eSA9IC0xMi4wO1xuXHRcdFx0XHRcdFx0ICBqdW1wID0gdHJ1ZTtcblx0XHRcdFx0XHRcdCAgdGhpcy5sb2dpbk5hbWUueSA9IHRoaXMueSAtIDE1O1xuXHRcdFx0XHRcdFx0ICBzb2NrZXQuZW1pdCgncHVzaFVwMDEnLCB7XG5cdFx0XHRcdFx0XHQgIFx0eDogdGhpcy54LFxuXHRcdFx0XHRcdFx0ICBcdHk6IHRoaXMueSxcblx0XHRcdFx0XHRcdCAgXHRmcmFtZTogdGhpcy5mcmFtZVxuXHRcdFx0XHRcdFx0ICB9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmIChpbnB1dC5yaWdodCkge1xuXHRcdFx0XHRcdFx0XHR0aGlzLnggKz0gcGxheWVyX3NwZWVkO1xuXHRcdFx0XHRcdFx0XHR0aGlzLmxvZ2luTmFtZS54ICs9IHBsYXllcl9zcGVlZDtcblx0XHRcdFx0XHRcdFx0dGhpcy5mcmFtZSA9IHRoaXMuYWdlICUgMyArIDE7XG5cdFx0XHRcdFx0XHRcdHNvY2tldC5lbWl0KCdwdXNoUmlnaHQwMScsIHtcblx0XHRcdFx0XHRcdFx0XHR4OiB0aGlzLngsXG5cdFx0XHRcdFx0XHRcdFx0eTogdGhpcy55LFxuXHRcdFx0XHRcdFx0XHRcdGZyYW1lOiB0aGlzLmZyYW1lXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKGlucHV0LmRvd24pIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5mcmFtZSA9IDg7XG5cdFx0XHRcdFx0XHRcdHNvY2tldC5lbWl0KCdwdXNoRG93bjAxJywge1xuXHRcdFx0XHRcdFx0XHRcdHg6IHRoaXMueCxcblx0XHRcdFx0XHRcdFx0XHR5OiB0aGlzLnksXG5cdFx0XHRcdFx0XHRcdFx0ZnJhbWU6IHRoaXMuZnJhbWVcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoaW5wdXQubGVmdCkge1xuXHRcdFx0XHRcdFx0XHR0aGlzLnNjYWxlWCA9IDE7XG5cdFx0XHRcdFx0XHRcdHRoaXMueCAtPSBwbGF5ZXJfc3BlZWQ7XG5cdFx0XHRcdFx0XHRcdHRoaXMubG9naW5OYW1lLnggLT0gcGxheWVyX3NwZWVkO1xuXHRcdFx0XHRcdFx0XHR0aGlzLmZyYW1lID0gdGhpcy5hZ2UgJSAzICsgMTtcblx0XHRcdFx0XHRcdFx0c29ja2V0LmVtaXQoJ3B1c2hMZWZ0MDEnLCB7XG5cdFx0XHRcdFx0XHRcdFx0eDogdGhpcy54LFxuXHRcdFx0XHRcdFx0XHRcdHk6IHRoaXMueSxcblx0XHRcdFx0XHRcdFx0XHRmcmFtZTogdGhpcy5mcmFtZVxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmIChpbnB1dC5hKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMueCArPSA1MDtcblx0XHRcdFx0XHRcdFx0dGhpcy5mcmFtZSA9IHRoaXMuYWdlICUgMyArIDk7XG5cdFx0XHRcdFx0XHRcdHNvY2tldC5lbWl0KCdhdHRhY2tBMDEnLCB7XG5cdFx0XHRcdFx0XHRcdFx0eDogdGhpcy54LFxuXHRcdFx0XHRcdFx0XHRcdHk6IHRoaXMueSxcblx0XHRcdFx0XHRcdFx0XHRmcmFtZTogdGhpcy5mcmFtZVxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmIChpbnB1dC5zKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMueCArPSAxMDtcblx0XHRcdFx0XHRcdFx0dGhpcy5mcmFtZSA9IHRoaXMuYWdlICUgMiArIDQ7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR0aGlzLnkgKz0gKHRoaXMueSAtIGdyb3VuZCkgKyBncmF2aXR5O1xuXHRcdFx0XHRcdFx0aWYgKHRoaXMueSA+IDIyMCkge1xuXHRcdFx0XHRcdFx0XHR0aGlzLnkgPSAyMjA7XG5cdFx0XHRcdFx0XHRcdGp1bXAgPSBmYWxzZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGdyb3VuZCA9IHRlbXB5O1xuXHRcdFx0XHRcdFx0cHJlSW5wdXQgPSBpbnB1dC51cDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRsZXQgW2xlZnQsIHRvcF0gPSBbMCwgMF07XG5cdFx0XHRcdFx0bGV0IFtyaWdodCwgYm90dG9tXSA9IFtzY3JlZW5fd2lkdGggLSB0aGlzLndpZHRoLCBzY3JlZW5faGVpZ2h0IC0gdGhpcy5oZWlnaF07XG5cblx0XHRcdFx0XHRpZiAodGhpcy54IDwgbGVmdCB8fCB0aGlzLmxvZ2luTmFtZS54IDwgbGVmdCkge1xuXHRcdFx0XHRcdFx0dGhpcy54ID0gbGVmdDtcblx0XHRcdFx0XHRcdHRoaXMubG9naW5OYW1lLnggPSBsZWZ0O1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAodGhpcy54ID4gcmlnaHQgfHwgdGhpcy5sb2dpbk5hbWUueCA+IHJpZ2h0KSB7XG5cdFx0XHRcdFx0XHR0aGlzLnggPSByaWdodDtcblx0XHRcdFx0XHRcdHRoaXMubG9naW5OYW1lLnggPSByaWdodDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHRoaXMueSA8IHRvcCB8fCB0aGlzLmxvZ2luTmFtZS55IDwgdG9wKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnkgPSB0b3A7XG5cdFx0XHRcdFx0XHR0aGlzLmxvZ2luTmFtZS55ID0gdG9wO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAodGhpcy55ID4gYm90dG9tIHx8IHRoaXMubG9naW5OYW1lLnkgPiBib3R0b20pIHtcblx0XHRcdFx0XHRcdHRoaXMueSA9IGJvdHRvbTtcblx0XHRcdFx0XHRcdHRoaXMubG9naW5OYW1lLnkgPSBib3R0b207XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRzZXRTZXR0aW5nRmlsZTogZnVuY3Rpb24oc2V0dGluZ0ZpbGUpIHtcblx0XHRcdFx0dGhpcy5zZXR0aW5nRmlsZSA9IHNldHRpbmdGaWxlO1xuXHRcdFx0XHRsZXQgY29yZSA9IGVuY2hhbnQuQ29yZS5pbnN0YW5jZTtcblx0XHRcdFx0aWYgKGNvcmUuYXNzZXRzW3RoaXMuc2V0dGluZ0ZpbGVdKSB7XG5cdFx0XHRcdFx0dGhpcy5zZXRTZXR0aW5nKGNvcmUuYXNzZXRzW3RoaXMuc2V0dGluZ0ZpbGVdKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdHNldFNldHRpbmc6IGZ1bmN0aW9uKHNldHRpbmcpIHtcblx0XHRcdFx0bGV0IGluZm8gPSBKU09OLnBhcnNlKHNldHRpbmcpO1xuXG5cdFx0XHRcdHRoaXMud2lkdGggPSBpbmZvLndpZHRoO1xuXHRcdFx0XHR0aGlzLmhlaWdodCA9IGluZm8uaGVpZ2h0O1xuXHRcdFx0XHR0aGlzLnggPSBpbmZvLng7XG5cdFx0XHRcdHRoaXMueSA9IGluZm8ueTtcblx0XHRcdFx0Y29uc29sZS5sb2codGhpcy54KTtcblx0XHRcdFx0dGhpcy5zZXRJbWFnZShpbmZvLmltYWdlKTtcblx0XHRcdH0sXG5cdFx0XHRhdHRhY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR0aGlzLmZyYW1lID0gdGhpcy5hZ2UgJSAzICsgNDtcblx0XHRcdFx0Y29uc29sZS5sb2cocGxheWVyMDEpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0Y29uc3QgQXR0YWNrMDEgPSBDbGFzcy5jcmVhdGUoU3ByaXRlLCB7XG5cdFx0XHRpbml0aWFsaXplOiBmdW5jdGlvbih4LCB5KSB7XG5cdFx0XHRcdHNwcml0ZS5jYWxsKHRoaXMsIDY0LCA2NCk7XG5cdFx0XHRcdHRoaXMuZGVzdHJveSA9IGZhbHNlO1xuXHRcdFx0XHR0aGlzLnggPSB4O1xuXHRcdFx0XHR0aGlzLnkgPSB5O1xuXHRcdFx0XHR0aGlzLm9uKCdlbnRlcmZyYW1lJywgKCkgPT4ge1xuXHRcdFx0XHRcdGlmIChnYW1lLmlucHV0LmEpIHtcblx0XHRcdFx0XHRcdEF0dGFjazAxRnVjKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKEF0dGFjazAxKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRjbGFzcyBQbGF5ZXIwMyB7XG5cdFx0XHRjb25zdHJ1Y3Rvcih4LCB5KSB7XG5cdFx0XHRcdGNvbnN0IHBsYXllcjAzX2ltZyA9IG5ldyBJbWFnZSgpO1xuXHRcdFx0XHRwbGF5ZXIwM19pbWcuc3JjID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9pbWFnZXMvYmlnbW9uc3RlcjIuZ2lmJztcblx0XHRcdFx0dGhpcy54ID0geDtcblx0XHRcdFx0dGhpcy55ID0geTtcblx0XHRcdFx0dGhpcy53aWR0aCA9IDI1NDtcblx0XHRcdFx0dGhpcy5oZWlnaHQgPSAyNTQ7XG5cdFx0XHRcdHRoaXMuaW1hZ2UgPSBnYW1lLmFzc2V0c1twbGF5ZXIwMV9pbWFnZV07XG5cdFx0XHRcdHRoaXMuZnJhbWUgPSAwO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGNvbnN0IFBsYXllcjAyID0gQ2xhc3MuY3JlYXRlKFNwcml0ZSwge1xuXHRcdFx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oeCwgeSkge1xuXHRcdFx0XHRTcHJpdGUuY2FsbCh0aGlzLCA2NCwgNjQpO1xuXHRcdFx0XHR0aGlzLmltYWdlID0gZ2FtZS5hc3NldHNbcGxheWVyMDJfaW1hZ2VdO1xuXHRcdFx0XHRsZXQgcDAxX2ltYWdlID0gdGhpcy5pbWFnZTtcblx0XHRcdFx0dGhpcy54ID0geDtcblx0XHRcdFx0dGhpcy55ID0geTtcblx0XHRcdFx0dGhpcy5zY2FsZVggPSAxO1xuXHRcdFx0XHR0aGlzLmZyYW1lID0gMDtcblx0XHRcdFx0dGhpcy5vbignZW50ZXJmcmFtZScsICgpID0+IHtcblx0XHRcdFx0XHR0aGlzLmZyYW1lID0gdGhpcy5kaXJlY3Rpb24gKiAzICsgdGhpcy53YWxrO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdHZhciBhdHRhY2tJbnRlcnNlY3QgPSAoKSA9PiB7XG5cdFx0XHRpZiAocGxheWVyMDEuaW50ZXJzZWN0KHBsYXllcjAyKSkge1xuXHRcdFx0XHRwbGF5ZXIwMi5yZW1vdmVFbnRlckxpc3RlbmVyKCdlbnRlcmZyYW1lJywgYXR0YWNrSW50ZXJzZWN0KTtcblx0XHRcdFx0Y29uc29sZS5sb2coJ+OBtuOBpOOBi+OBo+OBnycpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIEF0dGFjazAxRnVjKCkge1xuXHRcdFx0Y29uc3QgYXR0YWNrMDEgPSBuZXcgQXR0YWNrMDEoKTtcblx0XHRcdHJvb3QuYWRkQ2hpbGQoYXR0YWNrMDEpO1xuXHRcdFx0Y29uc29sZS5sb2coYXR0YWNrMDEpO1xuXHRcdH1cblxuXG5cdFx0ZnVuY3Rpb24gdG9wU2NlbmUoKSB7XG5cdFx0XHRsZXQgc2NlbmUgPSBuZXcgU2NlbmUoKTtcblx0XHRcdGxldCBiZyA9IG5ldyBTcHJpdGUoc2NyZWVuX3dpZHRoLCBzY3JlZW5faGVpZ2h0KTtcblxuXHRcdFx0cmV0dXJuIHNjZW5lO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIGJhdHRsZVNjZW5lKCkge1xuXHRcdFx0cm9vdC5hZGRDaGlsZChiZyk7XG5cdFx0XHRyb290LmFkZENoaWxkKExpZmVQMSk7XG5cdFx0XHRyb290LmFkZENoaWxkKExpZmVQMik7XG5cdFx0XHRwbGF5ZXIwMSA9IG5ldyBQbGF5ZXIwMShwbGF5ZXJJbmZvKTtcblx0XHRcdHJvb3QuYWRkQ2hpbGQocGxheWVyMDEsIGF0dGFja0ludGVyc2VjdCk7XG5cdFx0XHRyb290LmFkZENoaWxkKHBsYXllcjAxLmxvZ2luTmFtZSk7XG5cblx0XHRcdGNvbnNvbGUubG9nKHBsYXllcjAxLmZyYW1lKTtcblxuXHRcdFx0Y29uc3QgcGxheWVyMDIgPSBuZXcgUGxheWVyMDIoc2NyZWVuX3dpZHRoIC8gMS41LCAyMjApO1xuXHRcdFx0cm9vdC5hZGRDaGlsZChwbGF5ZXIwMiwgYXR0YWNrSW50ZXJzZWN0KTtcblxuXHRcdFx0Ly8gY29uc3QgZGlzdGFuY2UgPSAocGxheWVyMDFFbnRpdHkud2lkdGggKyBwbGF5ZXIwMS53aWR0aCkgLyAyO1xuXHRcdFx0Ly8gaWYgKHBsYXllcjAxLndpdGhpbihwbGF5ZXIwMUVudGl0eSwgZGlzdGFuY2UpID09PSB0cnVlKSB7XG5cdFx0XHQvLyBcdHBsYXllcjAxRW50aXR5LmJhY2tncm91bmRDb2xvciA9ICdyZWQnO1xuXHRcdFx0Ly8gfVxuXHRcdFx0cmV0dXJuIHNjZW5lO1xuXHRcdH1cblxuXHRcdGdhbWUucm9vdFNjZW5lLm9uKCdlbnRlcmZyYW1lJywgKCkgPT4ge1xuXHRcdFx0aWYgKGdhbWUuaW5wdXQuc3BhY2UpIHtcblx0XHRcdFx0YmF0dGxlU2NlbmUoKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fTtcblx0Z2FtZS5zdGFydCgpO1xufTsiXX0=
